# -*- coding: utf-8 -*-
"""treinamento-python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/Bruno-Merino/820414e300c3fe7cf88f9eab6f43cf39/treinamento-python.ipynb
"""

# Lógica de Programação
# Passo 0 - Entender o desafio que você quer resolver
# Passo 1 - Percorrer todos os arquivos da pasta base de dados
import os
import pandas as pd

lista_arquivo =  os.listdir("/content/drive/MyDrive/Vendas")
display(lista_arquivo)

tabela_total = pd.DataFrame()

# Passo 2 Importar as bases de dados de vendas
for arquivo in lista_arquivo:
  # se tem "Vendas " no nome do arquiv,então
  if 'Vendas' in arquivo:

    #importar arquivo
    tabela= pd.read_csv(f"/content/drive/MyDrive/Vendas/{arquivo}")
    tabela_total = tabela_total.append(tabela)

# Passo 3 - Tratar/Compilar as bases de dados
display(tabela_total)

# Passo 4 - tratar o produto mais vendido (em quantidade)
#soma total da quantidade de produtos
tabela_produtos = tabela_total.groupby('Produto').sum()
tabela_produtos = tabela_produtos [["Quantidade Vendida","Preco Unitario"]].sort_values(by="Quantidade Vendida", ascending=False)
                                       #quais colunas serão somadas             essa sort values selecional vai ser a ordem da columa com o maior valor em ordem crescente false ou true
display(tabela_produtos)

# Passo 4 - Calcular o Produto mais faturado (em faturamento)
#criar uma nova coluna "Faturamento" que é a soma Quantidade Vendida x pRECO UNITARIO
tabela_total["Faturamento"] = tabela_total ['Quantidade Vendida'] * tabela_total ['Preco Unitario']
display(tabela_total)

# Passo 5 - Calcular a loja/cidade que mais vendeu (em faturamento) criar um fráfico em dasboard
tabela_lojas = tabela_total.groupby('Loja').sum()
tabela_lojas - tabela_lojas[["Faturamento"]]
display(tabela_lojas)

#Vamos fazer um gráfico agora usando a biblioteca plotly
import plotly.express as px

grafico = px.bar( tabela_lojas, x=tabela_lojas.index, y='Faturamento')
grafico.show()